{"version":3,"sources":["Home.jsx","MyApp.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","useState","aboveGroundSqFt","setAboveGroundSqFt","overallQuality","setOverallQuality","basementFinishSqFt","setBasemenFinishSqFt","basementTotalSqFt","setBasementTotalSqFt","secondFloorSqFt","setSecondFloorSqFt","yearBuilt","setYearBuilt","firstFloorSqFt","setFirstFloorSqFt","lotAreaSqFt","setLotAreaSqFt","garageAreaSqFt","setGarageAreaSqFt","garageCars","setGarageCars","housePricePrediction","setHousePricePrediction","aboveGroundSqFtValueState","setAboveGroundSqFtValueState","overallQualityValueState","setOverallQualityValueState","basementFinishSqFtValueState","setBasementFinishSqFtValueState","basementTotalSqFtValueState","setBasementTotalSqFtValueState","secondFloorSqFtValueState","setSecondFloorSqFtValueState","yearBuiltValueState","setYearBuiltValueState","firstFloorSqFtValueState","setFirstFloorSqFtValueState","lotAreaSqFtValueState","setLotAreaSqFtValueState","garageAreaSqFtValueState","setGarageAreaSqFtValueState","garageCarsValueState","setGarageCarsValueState","messageBoxOpen","setMessageBoxOpen","popoverRef","useRef","a","fetch","wakeupResponse","json","wakeupResponseJSON","useEffect","wakeupServer","FlexBox","justifyContent","FlexBoxJustifyContent","Center","wrap","FlexBoxWrap","Wrap","style","spacing","sapUiContentPadding","Form","title","FormItem","label","Select","required","valueState","onChange","e","detail","selectedOption","dataset","id","text","map","item","Option","key","data-id","Input","type","onInput","target","value","Button","onClick","method","headers","body","JSON","stringify","OverallQual","GrLivArea","BsmtFinSF1","TotalBsmtSF","YearBuilt","LotArea","GarageArea","GarageCars","then","response","data","Prediction","predictionPost","current","open","disabled","MessageBox","onClose","ResponsivePopover","ref","MyApp","history","useHistory","ShellBar","logo","alt","src","profile","Avatar","image","primaryTitle","onLogoClick","push","path","component","from","to","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ufAuBO,SAASA,IAAQ,IAAD,EACyBC,qBADzB,mBACdC,EADc,KACGC,EADH,OAEuBF,mBAAS,GAFhC,mBAEdG,EAFc,KAEEC,EAFF,OAG8BJ,qBAH9B,mBAGdK,EAHc,KAGMC,EAHN,OAI6BN,qBAJ7B,mBAIdO,EAJc,KAIKC,EAJL,OAKyBR,qBALzB,mBAKdS,EALc,KAKGC,EALH,OAMaV,qBANb,mBAMdW,EANc,KAMHC,EANG,OAOuBZ,qBAPvB,mBAOda,EAPc,KAOEC,EAPF,OAQiBd,qBARjB,mBAQde,EARc,KAQDC,EARC,OASuBhB,qBATvB,mBASdiB,EATc,KASEC,EATF,OAUelB,mBAAS,GAVxB,oBAUdmB,GAVc,MAUFC,GAVE,SAWmCpB,qBAXnC,qBAWdqB,GAXc,MAWQC,GAXR,SAa6CtB,mBAChE,QAdmB,qBAaduB,GAbc,MAaaC,GAbb,SAgB2CxB,mBAC9D,QAjBmB,qBAgBdyB,GAhBc,MAgBYC,GAhBZ,SAsBjB1B,mBAAS,QAtBQ,qBAoBnB2B,GApBmB,MAqBnBC,GArBmB,SA0BjB5B,mBAAS,QA1BQ,qBAwBnB6B,GAxBmB,MAyBnBC,GAzBmB,SA2B6C9B,mBAChE,QA5BmB,qBA2Bd+B,GA3Bc,MA2BaC,GA3Bb,SA8BiChC,mBAAS,QA9B1C,qBA8BdiC,GA9Bc,MA8BOC,GA9BP,SA+B2ClC,mBAC9D,QAhCmB,qBA+BdmC,GA/Bc,MA+BYC,GA/BZ,SAkCqCpC,mBAAS,QAlC9C,qBAkCdqC,GAlCc,MAkCSC,GAlCT,SAmC2CtC,mBAC9D,QApCmB,qBAmCduC,GAnCc,MAmCYC,GAnCZ,SAsCmCxC,mBAAS,QAtC5C,qBAsCdyC,GAtCc,MAsCQC,GAtCR,SAwCuB1C,oBAAS,GAxChC,qBAwCd2C,GAxCc,MAwCEC,GAxCF,MAgDfC,GAAaC,mBAhDE,8CAsDrB,8BAAAC,EAAA,sEAC6BC,MACzB,sDAFJ,cACMC,EADN,gBAIiCA,EAAeC,OAJhD,cAIMC,EAJN,yBAKSA,GALT,4CAtDqB,sBAkDrBC,qBAAU,YAlDW,oCAmDnBC,KACC,IA+HH,OACE,6BACE,kBAACC,EAAA,EAAD,CACEC,eAAgBC,IAAsBC,OACtCC,KAAMC,IAAYC,KAClBC,MAAOC,IAAQC,qBAEf,kBAACC,EAAA,EAAD,CAAMC,MAAM,0BACV,kBAACC,EAAA,EAAD,CAAUC,MAAM,mBACd,kBAACC,EAAA,EAAD,CACEC,UAAU,EACVC,WAAY7C,GACZ8C,SAAU,SAACC,GACTpE,EAAkBoE,EAAEC,OAAOC,eAAeC,QAAQC,MAjCnC,CAC3B,CAAEA,GAAI,EAAGC,KAAM,KACf,CAAED,GAAI,EAAGC,KAAM,KACf,CAAED,GAAI,EAAGC,KAAM,KACf,CAAED,GAAI,EAAGC,KAAM,KACf,CAAED,GAAI,EAAGC,KAAM,KACf,CAAED,GAAI,EAAGC,KAAM,KACf,CAAED,GAAI,EAAGC,KAAM,KACf,CAAED,GAAI,EAAGC,KAAM,KACf,CAAED,GAAI,EAAGC,KAAM,KACf,CAAED,GAAI,GAAIC,KAAM,OA2BgBC,KAAI,SAACC,GAAD,OACxB,kBAACC,EAAA,EAAD,CAAQC,IAAKF,EAAKH,GAAIM,UAASH,EAAKH,IACjCG,EAAKF,WAKd,kBAACX,EAAA,EAAD,CAAUC,MAAM,eACd,kBAACC,EAAA,EAAD,CACEC,UAAU,EACVC,WAAY7B,GACZ8B,SAAU,SAACC,GACTpD,GAAcoD,EAAEC,OAAOC,eAAeC,QAAQC,MApCnC,CACvB,CAAEA,GAAI,EAAGC,KAAM,KACf,CAAED,GAAI,EAAGC,KAAM,KACf,CAAED,GAAI,EAAGC,KAAM,KACf,CAAED,GAAI,EAAGC,KAAM,MAoCaC,KAAI,SAACC,GAAD,OACpB,kBAACC,EAAA,EAAD,CAAQC,IAAKF,EAAKH,GAAIM,UAASH,EAAKH,IACjCG,EAAKF,WAKd,kBAACX,EAAA,EAAD,CAAUC,MAAM,gBACd,kBAACgB,EAAA,EAAD,CACEd,UAAU,EACVe,KAAK,SACLd,WAAY/B,GACZ8C,QAAS,SAACb,GACRtD,EAAkBsD,EAAEc,OAAOC,WAKjC,kBAACrB,EAAA,EAAD,CAAUC,MAAM,sBACd,kBAACgB,EAAA,EAAD,CACEd,UAAU,EACVe,KAAK,SACLd,WAAY/C,GACZ8D,QAAS,SAACb,GACRtE,EAAmBsE,EAAEc,OAAOC,WAKlC,kBAACrB,EAAA,EAAD,CAAUC,MAAM,kBACd,kBAACgB,EAAA,EAAD,CACEd,UAAU,EACVe,KAAK,SACLd,WAAYjC,GACZgD,QAAS,SAACb,GACRxD,EAAewD,EAAEc,OAAOC,WAK9B,kBAACrB,EAAA,EAAD,CAAUC,MAAM,wBACd,kBAACgB,EAAA,EAAD,CACEd,UAAU,EACVe,KAAK,SACLd,WAAYzC,GACZwD,QAAS,SAACb,GACRhE,EAAqBgE,EAAEc,OAAOC,WAKpC,kBAACrB,EAAA,EAAD,CAAUC,MAAM,4BACd,kBAACgB,EAAA,EAAD,CACEd,UAAU,EACVe,KAAK,SACLd,WAAY3C,GACZ0D,QAAS,SAACb,GACRlE,EAAqBkE,EAAEc,OAAOC,WAKpC,kBAACrB,EAAA,EAAD,CAAUC,MAAM,qBACd,kBAACgB,EAAA,EAAD,CACEd,UAAU,EACVe,KAAK,SACLd,WAAYnC,GACZkD,QAAS,SAACb,GACR1D,EAAkB0D,EAAEc,OAAOC,WAKjC,kBAACrB,EAAA,EAAD,CAAUC,MAAM,sBACd,kBAACgB,EAAA,EAAD,CACEd,UAAU,EACVe,KAAK,SACLd,WAAYvC,GACZsD,QAAS,SAACb,GACR9D,EAAmB8D,EAAEc,OAAOC,WAKlC,kBAACrB,EAAA,EAAD,CAAUC,MAAM,cACd,kBAACgB,EAAA,EAAD,CACEd,UAAU,EACVe,KAAK,SACLd,WAAYrC,GACZoD,QAAS,SAACb,GACR5D,EAAa4D,EAAEc,OAAOC,aAOhC,kBAACjC,EAAA,EAAD,CACEC,eAAgBC,IAAsBC,OACtCC,KAAMC,IAAYC,KAClBC,MAAOC,IAAQC,qBAEf,kBAACyB,EAAA,EAAD,CAAQC,QA5Pd,SAAsBjB,GAAG,4CA6CvB,sBAAAzB,EAAA,sDACEC,MAAM,sDAAuD,CAC3D0C,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,YAAa5F,EACb6F,UAAW/F,EACXgG,WAAY5F,EACZ6F,YAAa3F,EACb,WAAYE,EACZ0F,UAAWxF,EACX,WAAYE,EACZuF,QAASrF,EACTsF,WAAYpF,EACZqF,WAAYnF,OAGboF,MAAK,SAACC,GAAD,OAAcA,EAAStD,UAC5BqD,MAAK,SAACE,GACLnF,GAAwBmF,EAAKC,eAnBnC,4CA7CuB,sBAEnBlF,GADe,MAAnBvB,GAA2BA,EAAkB,GAAyB,KAApBA,EACjB,QACA,QAG7ByB,GADc,MAAlBvB,GAA0BA,EAAiB,GAAwB,KAAnBA,EAChB,QACA,QAG5BmC,GADW,MAAfvB,GAAuBA,EAAc,GAAqB,KAAhBA,EACb,QACA,QAKzBe,GAHiB,MAArBvB,GACAA,EAAoB,GACE,KAAtBA,EACmC,QACA,QAK/BqB,GAHkB,MAAtBvB,GACAA,EAAqB,GACE,KAAvBA,EACoC,QACA,QAGhC+B,GADc,MAAlBvB,GAA0BA,EAAiB,GAAwB,KAAnBA,EAChB,QACA,QAG5BmB,GADe,MAAnBvB,GAA2BA,EAAkB,GAAyB,KAApBA,EACjB,QACA,QAG7ByB,GADS,MAAbvB,GAAqBA,EAAY,MAAsB,KAAdA,EACd,QACA,QAGvB6B,GADc,MAAlBvB,GAA0BA,EAAiB,GAAwB,KAAnBA,EAChB,QACA,QAG5ByB,GADU,MAAdvB,IAAsBA,GAAa,GAAoB,KAAfA,GACZ,QACA,SA8CL,KApBrBlB,GAAmB,GACC,KAApBA,GACAE,EAAiB,GACE,KAAnBA,GACAE,GAAsB,GACC,KAAvBA,GACAE,GAAqB,GACC,KAAtBA,GACAE,GAAmB,GACC,KAApBA,GACAE,GAAa,MACbE,GAAkB,GACC,KAAnBA,GACAE,GAAe,GACC,KAAhBA,GACAE,GAAkB,GACC,KAAnBA,GACAE,IAAc,GACC,KAAfA,MAvFqB,mCA0FrBwF,GACA9D,GAAW+D,QAAQC,KAAKrC,EAAEc,SA/G5B1C,IAAkB,IAgRiBkE,UAAU,GAAzC,WAIF,6BACE,kBAACC,EAAA,EAAD,CACE9C,MAAM,mBACN4C,KAAMlE,GACNqE,QAtRsB,WAC5BpE,IAAkB,KAkRd,8DAQF,6BACE,kBAACqE,EAAA,EAAD,CAAmBC,IAAKrE,IAAxB,IACIxB,MCtVL,SAAS8F,IACd,IAAMC,EAAUC,cAKhB,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,KAAM,yBAAKC,IAAI,OAAOC,IAAI,mBAC1BC,QAAS,kBAACC,EAAA,EAAD,CAAQC,MAAM,iBACvBC,aAAc,yBACdC,YAVkB,WACtBV,EAAQW,KAAK,SAWX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWlI,IAC/B,kBAAC,IAAD,CAAUmI,KAAK,IAAIC,GAAG,Y,aCTfC,MAVf,WACE,OACE,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAClB,EAAD,S,OCCYmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DCXnCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDsH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1C,MAAK,SAAC2C,GAClCA,EAAaC,kB","file":"static/js/main.f57d34d8.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  FlexBox,\r\n  FlexBoxJustifyContent,\r\n  FlexBoxWrap,\r\n  Button,\r\n} from \"@ui5/webcomponents-react\";\r\nimport { spacing } from \"@ui5/webcomponents-react-base\";\r\nimport { Input } from \"@ui5/webcomponents-react/lib/Input\";\r\nimport { Select } from \"@ui5/webcomponents-react/lib/Select\";\r\nimport { FormItem } from \"@ui5/webcomponents-react/lib/FormItem\";\r\nimport { Option } from \"@ui5/webcomponents-react/lib/Option\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/horizontal-bar-chart.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/line-chart.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/list.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/table-view.js\";\r\nimport \"@ui5/webcomponents/dist/Assets.js\";\r\nimport \"@ui5/webcomponents-fiori/dist/Assets.js\"; // Only if using the @ui5/webcomponents-fiori package\r\nimport \"@ui5/webcomponents-icons/dist/Assets.js\"; // Only if using the @ui5/webcomponents-icons package\r\nimport { Form } from \"@ui5/webcomponents-react/lib/Form\";\r\nimport { MessageBox } from \"@ui5/webcomponents-react/lib/MessageBox\";\r\nimport { ResponsivePopover } from \"@ui5/webcomponents-react/lib/ResponsivePopover\";\r\n\r\nexport function Home() {\r\n  const [aboveGroundSqFt, setAboveGroundSqFt] = useState();\r\n  const [overallQuality, setOverallQuality] = useState(1);\r\n  const [basementFinishSqFt, setBasemenFinishSqFt] = useState();\r\n  const [basementTotalSqFt, setBasementTotalSqFt] = useState();\r\n  const [secondFloorSqFt, setSecondFloorSqFt] = useState();\r\n  const [yearBuilt, setYearBuilt] = useState();\r\n  const [firstFloorSqFt, setFirstFloorSqFt] = useState();\r\n  const [lotAreaSqFt, setLotAreaSqFt] = useState();\r\n  const [garageAreaSqFt, setGarageAreaSqFt] = useState();\r\n  const [garageCars, setGarageCars] = useState(1);\r\n  const [housePricePrediction, setHousePricePrediction] = useState();\r\n\r\n  const [aboveGroundSqFtValueState, setAboveGroundSqFtValueState] = useState(\r\n    \"None\"\r\n  );\r\n  const [overallQualityValueState, setOverallQualityValueState] = useState(\r\n    \"None\"\r\n  );\r\n  const [\r\n    basementFinishSqFtValueState,\r\n    setBasementFinishSqFtValueState,\r\n  ] = useState(\"None\");\r\n  const [\r\n    basementTotalSqFtValueState,\r\n    setBasementTotalSqFtValueState,\r\n  ] = useState(\"None\");\r\n  const [secondFloorSqFtValueState, setSecondFloorSqFtValueState] = useState(\r\n    \"None\"\r\n  );\r\n  const [yearBuiltValueState, setYearBuiltValueState] = useState(\"None\");\r\n  const [firstFloorSqFtValueState, setFirstFloorSqFtValueState] = useState(\r\n    \"None\"\r\n  );\r\n  const [lotAreaSqFtValueState, setLotAreaSqFtValueState] = useState(\"None\");\r\n  const [garageAreaSqFtValueState, setGarageAreaSqFtValueState] = useState(\r\n    \"None\"\r\n  );\r\n  const [garageCarsValueState, setGarageCarsValueState] = useState(\"None\");\r\n\r\n  const [messageBoxOpen, setMessageBoxOpen] = useState(false);\r\n  const openMessageBox = () => {\r\n    setMessageBoxOpen(true);\r\n  };\r\n  const handleMessageBoxClose = () => {\r\n    setMessageBoxOpen(false);\r\n  };\r\n\r\n  const popoverRef = useRef();\r\n\r\n  useEffect(() => {\r\n    wakeupServer();\r\n  }, []);\r\n\r\n  async function wakeupServer() {\r\n    let wakeupResponse = await fetch(\r\n      \"https://peaceful-castle-35694.herokuapp.com/wakeup\"\r\n    );\r\n    let wakeupResponseJSON = await wakeupResponse.json();\r\n    return wakeupResponseJSON;\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    aboveGroundSqFt == null || aboveGroundSqFt < 0 || aboveGroundSqFt === \"\"\r\n      ? setAboveGroundSqFtValueState(\"Error\")\r\n      : setAboveGroundSqFtValueState(\"None\");\r\n\r\n    overallQuality == null || overallQuality < 1 || overallQuality === \"\"\r\n      ? setOverallQualityValueState(\"Error\")\r\n      : setOverallQualityValueState(\"None\");\r\n\r\n    lotAreaSqFt == null || lotAreaSqFt < 0 || lotAreaSqFt === \"\"\r\n      ? setLotAreaSqFtValueState(\"Error\")\r\n      : setLotAreaSqFtValueState(\"None\");\r\n\r\n    basementTotalSqFt == null ||\r\n    basementTotalSqFt < 0 ||\r\n    basementTotalSqFt === \"\"\r\n      ? setBasementTotalSqFtValueState(\"Error\")\r\n      : setBasementTotalSqFtValueState(\"None\");\r\n\r\n    basementFinishSqFt == null ||\r\n    basementFinishSqFt < 0 ||\r\n    basementFinishSqFt === \"\"\r\n      ? setBasementFinishSqFtValueState(\"Error\")\r\n      : setBasementFinishSqFtValueState(\"None\");\r\n\r\n    firstFloorSqFt == null || firstFloorSqFt < 0 || firstFloorSqFt === \"\"\r\n      ? setFirstFloorSqFtValueState(\"Error\")\r\n      : setFirstFloorSqFtValueState(\"None\");\r\n\r\n    secondFloorSqFt == null || secondFloorSqFt < 0 || secondFloorSqFt === \"\"\r\n      ? setSecondFloorSqFtValueState(\"Error\")\r\n      : setSecondFloorSqFtValueState(\"None\");\r\n\r\n    yearBuilt == null || yearBuilt < 1900 || yearBuilt === \"\"\r\n      ? setYearBuiltValueState(\"Error\")\r\n      : setYearBuiltValueState(\"None\");\r\n\r\n    garageAreaSqFt == null || garageAreaSqFt < 0 || garageAreaSqFt === \"\"\r\n      ? setGarageAreaSqFtValueState(\"Error\")\r\n      : setGarageAreaSqFtValueState(\"None\");\r\n\r\n    garageCars == null || garageCars < 0 || garageCars === \"\"\r\n      ? setGarageCarsValueState(\"Error\")\r\n      : setGarageCarsValueState(\"None\");\r\n\r\n    async function predictionPost() {\r\n      fetch(\"https://peaceful-castle-35694.herokuapp.com/predict\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          OverallQual: overallQuality,\r\n          GrLivArea: aboveGroundSqFt,\r\n          BsmtFinSF1: basementFinishSqFt,\r\n          TotalBsmtSF: basementTotalSqFt,\r\n          \"2ndFlrSF\": secondFloorSqFt,\r\n          YearBuilt: yearBuilt,\r\n          \"1stFlrSF\": firstFloorSqFt,\r\n          LotArea: lotAreaSqFt,\r\n          GarageArea: garageAreaSqFt,\r\n          GarageCars: garageCars,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setHousePricePrediction(data.Prediction);\r\n        });\r\n    }\r\n\r\n    const validationBool =\r\n      aboveGroundSqFt >= 0 &&\r\n      aboveGroundSqFt !== \"\" &&\r\n      overallQuality > 0 &&\r\n      overallQuality !== \"\" &&\r\n      basementFinishSqFt >= 0 &&\r\n      basementFinishSqFt !== \"\" &&\r\n      basementTotalSqFt >= 0 &&\r\n      basementTotalSqFt !== \"\" &&\r\n      secondFloorSqFt >= 0 &&\r\n      secondFloorSqFt !== \"\" &&\r\n      yearBuilt >= 1900 &&\r\n      firstFloorSqFt >= 0 &&\r\n      firstFloorSqFt !== \"\" &&\r\n      lotAreaSqFt >= 0 &&\r\n      lotAreaSqFt !== \"\" &&\r\n      garageAreaSqFt >= 0 &&\r\n      garageAreaSqFt !== \"\" &&\r\n      garageCars >= 0 &&\r\n      garageCars !== \"\";\r\n\r\n    if (validationBool === true) {\r\n      predictionPost();\r\n      popoverRef.current.open(e.target);\r\n    } else {\r\n      openMessageBox();\r\n    }\r\n  }\r\n\r\n  const overallRatingOptions = [\r\n    { id: 1, text: \"1\" },\r\n    { id: 2, text: \"2\" },\r\n    { id: 3, text: \"3\" },\r\n    { id: 4, text: \"4\" },\r\n    { id: 5, text: \"5\" },\r\n    { id: 6, text: \"6\" },\r\n    { id: 7, text: \"7\" },\r\n    { id: 8, text: \"8\" },\r\n    { id: 9, text: \"9\" },\r\n    { id: 10, text: \"10\" },\r\n  ];\r\n\r\n  const garageCarOptions = [\r\n    { id: 1, text: \"1\" },\r\n    { id: 2, text: \"2\" },\r\n    { id: 3, text: \"3\" },\r\n    { id: 4, text: \"4\" },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <FlexBox\r\n        justifyContent={FlexBoxJustifyContent.Center}\r\n        wrap={FlexBoxWrap.Wrap}\r\n        style={spacing.sapUiContentPadding}\r\n      >\r\n        <Form title=\"House Price Prediction\">\r\n          <FormItem label=\"Overall Quality\">\r\n            <Select\r\n              required={true}\r\n              valueState={overallQualityValueState}\r\n              onChange={(e) => {\r\n                setOverallQuality(e.detail.selectedOption.dataset.id);\r\n              }}\r\n              //onSubmit={handleSubmit}\r\n            >\r\n              {overallRatingOptions.map((item) => (\r\n                <Option key={item.id} data-id={item.id}>\r\n                  {item.text}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </FormItem>\r\n          <FormItem label=\"Garage Cars\">\r\n            <Select\r\n              required={true}\r\n              valueState={garageCarsValueState}\r\n              onChange={(e) => {\r\n                setGarageCars(e.detail.selectedOption.dataset.id);\r\n              }}\r\n              //onSubmit={handleSubmit}\r\n            >\r\n              {garageCarOptions.map((item) => (\r\n                <Option key={item.id} data-id={item.id}>\r\n                  {item.text}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </FormItem>\r\n          <FormItem label=\"Garage Sq-Ft\">\r\n            <Input\r\n              required={true}\r\n              type=\"Number\"\r\n              valueState={garageAreaSqFtValueState}\r\n              onInput={(e) => {\r\n                setGarageAreaSqFt(e.target.value);\r\n              }}\r\n              //onSubmit={handleSubmit}\r\n            />\r\n          </FormItem>\r\n          <FormItem label=\"Above Ground Sq-Ft\">\r\n            <Input\r\n              required={true}\r\n              type=\"Number\"\r\n              valueState={aboveGroundSqFtValueState}\r\n              onInput={(e) => {\r\n                setAboveGroundSqFt(e.target.value);\r\n              }}\r\n              //onSubmit={handleSubmit}\r\n            />\r\n          </FormItem>\r\n          <FormItem label=\"Lot Area Sq-Ft\">\r\n            <Input\r\n              required={true}\r\n              type=\"Number\"\r\n              valueState={lotAreaSqFtValueState}\r\n              onInput={(e) => {\r\n                setLotAreaSqFt(e.target.value);\r\n              }}\r\n              //onSubmit={handleSubmit}\r\n            />\r\n          </FormItem>\r\n          <FormItem label=\"Basement Total Sq-Ft\">\r\n            <Input\r\n              required={true}\r\n              type=\"Number\"\r\n              valueState={basementTotalSqFtValueState}\r\n              onInput={(e) => {\r\n                setBasementTotalSqFt(e.target.value);\r\n              }}\r\n              //onSubmit={handleSubmit}\r\n            />\r\n          </FormItem>\r\n          <FormItem label=\"Basement Fisnished Sq-Ft\">\r\n            <Input\r\n              required={true}\r\n              type=\"Number\"\r\n              valueState={basementFinishSqFtValueState}\r\n              onInput={(e) => {\r\n                setBasemenFinishSqFt(e.target.value);\r\n              }}\r\n              //onSubmit={handleSubmit}\r\n            />\r\n          </FormItem>\r\n          <FormItem label=\"First Floor Sq-Ft\">\r\n            <Input\r\n              required={true}\r\n              type=\"Number\"\r\n              valueState={firstFloorSqFtValueState}\r\n              onInput={(e) => {\r\n                setFirstFloorSqFt(e.target.value);\r\n              }}\r\n              //onSubmit={handleSubmit}\r\n            />\r\n          </FormItem>\r\n          <FormItem label=\"Second Floor Sq-Ft\">\r\n            <Input\r\n              required={true}\r\n              type=\"Number\"\r\n              valueState={secondFloorSqFtValueState}\r\n              onInput={(e) => {\r\n                setSecondFloorSqFt(e.target.value);\r\n              }}\r\n              //onSubmit={handleSubmit}\r\n            />\r\n          </FormItem>\r\n          <FormItem label=\"Year Built\">\r\n            <Input\r\n              required={true}\r\n              type=\"Number\"\r\n              valueState={yearBuiltValueState}\r\n              onInput={(e) => {\r\n                setYearBuilt(e.target.value);\r\n              }}\r\n              //onSubmit={handleSubmit}\r\n            />\r\n          </FormItem>\r\n        </Form>\r\n      </FlexBox>\r\n      <FlexBox\r\n        justifyContent={FlexBoxJustifyContent.Center}\r\n        wrap={FlexBoxWrap.Wrap}\r\n        style={spacing.sapUiContentPadding}\r\n      >\r\n        <Button onClick={handleSubmit} disabled={false}>\r\n          Submit\r\n        </Button>\r\n      </FlexBox>\r\n      <div>\r\n        <MessageBox\r\n          title=\"Submission Error\"\r\n          open={messageBoxOpen}\r\n          onClose={handleMessageBoxClose}\r\n        >\r\n          Please ensure all fields are populated with valid entries\r\n        </MessageBox>\r\n      </div>\r\n      <div>\r\n        <ResponsivePopover ref={popoverRef}>\r\n          ${housePricePrediction}\r\n        </ResponsivePopover>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ShellBar, Avatar } from \"@ui5/webcomponents-react\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/add.js\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { Home } from \"./Home\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"@ui5/webcomponents/dist/Assets.js\";\r\nimport \"@ui5/webcomponents-fiori/dist/Assets.js\"; // Only if using the @ui5/webcomponents-fiori package\r\nimport \"@ui5/webcomponents-icons/dist/Assets.js\"; // Only if using the @ui5/webcomponents-icons package\r\n\r\nexport function MyApp() {\r\n  const history = useHistory();\r\n  const handleLogoClick = () => {\r\n    history.push(\"./\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ShellBar\r\n        logo={<img alt=\"logo\" src=\"react-logo.png\" />}\r\n        profile={<Avatar image=\"ui5-logo.png\" />}\r\n        primaryTitle={\"House Price Prediction\"}\r\n        onLogoClick={handleLogoClick}\r\n      ></ShellBar>\r\n      <Switch>\r\n        <Route path=\"/home\" component={Home} />\r\n        <Redirect from=\"/\" to=\"/home\" />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","import \"@ui5/webcomponents/dist/Assets.js\";\nimport { ThemeProvider } from \"@ui5/webcomponents-react/lib/ThemeProvider\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { MyApp } from \"./MyApp\";\nimport { HashRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <ThemeProvider>\n        <MyApp />\n      </ThemeProvider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}